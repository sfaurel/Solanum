---
const projects = [
  {
    id: 'project_a',
    name: 'Project A'
  },
  {
    id: 'project_b',
    name: 'Project B'
  }
];

const defaultProject = projects[0];
---

<div class="w-full relative">
  <button
    id="project-toggle"
    class="flex items-center w-full p-2 text-midnight-900 dark:text-white rounded-lg bg-midnight-100 dark:bg-midnight-700 hover:bg-midnight-200 dark:hover:bg-midnight-600"
  >
    <div id="selected-color" class="size-6 rounded-full bg-gray-500 mr-3"></div>
    <div class="text-left">
      <div id="selected-name" class="text-sm font-semibold">{defaultProject.name}</div>
      <div id="selected-id" class="text-xs text-midnight-500 dark:text-midnight-400">{defaultProject.id}</div>
    </div>
    <svg
      id="arrow-icon"
      class="w-4 h-4 ml-auto text-midnight-400 transition-transform duration-200"
      xmlns="http://www.w3.org/2000/svg"
      fill="none" viewBox="0 0 24 24" stroke="currentColor"
    >
      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7" />
    </svg>
  </button>

  <div id="project-dropdown" class="absolute z-10 w-full mt-1 rounded-lg shadow bg-midnight-300 dark:bg-midnight-700 hidden">
    {projects.map(project => (
      <button
        type="button"
        data-id={project.id}
        data-project={project.name}
        class="flex items-center w-full p-2 text-midnight-900 dark:text-white hover:bg-midnight-400 dark:hover:bg-midnight-600"
      >
        <div class={`size-6 rounded-full bg-gray-500 mr-3`}></div>
        <div class="text-left">
          <div class="text-sm font-semibold">{project.name}</div>
          <div class="text-xs text-midnight-500 dark:text-midnight-400">{project.id}</div>
        </div>
      </button>
    ))}
  </div>
</div>


<script>
  const toggleBtn = document.getElementById("project-toggle");
  const dropdown = document.getElementById("project-dropdown");
  const arrowIcon = document.getElementById("arrow-icon");

  const updateSelected = (id, name) => {
    document.getElementById("selected-name").textContent = name;
    localStorage.setItem("selected_project_id", id);
  };

  toggleBtn.addEventListener("click", () => {
    dropdown.classList.toggle("hidden");
    arrowIcon.classList.toggle("rotate-180");
  });

  document.querySelectorAll("[data-id]").forEach((el) => {
    el.addEventListener("click", () => {
      const id = el.getAttribute("data-id");
      const name = el.getAttribute("data-project");

      updateSelected(id, name);
      dropdown.classList.add("hidden");
      arrowIcon.classList.remove("rotate-180");
    });
  });

  // Restaurar selecciÃ³n al cargar
  window.addEventListener("DOMContentLoaded", () => {
    const savedId = localStorage.getItem("selected_project_id");
    if (!savedId) return;
    const match = document.querySelector(`[data-id="${savedId}"]`);
    if (match) {
      const name = match.getAttribute("data-project");
      updateSelected(savedId, name);
    }
  });
</script>